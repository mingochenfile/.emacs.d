This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by auctex configure 11.87, which was
generated by GNU Autoconf 2.59.  Invocation command line was

  $ ./configure 

## --------- ##
## Platform. ##
## --------- ##

hostname = commanders
uname -m = x86_64
uname -r = 3.5.0-28-generic
uname -s = Linux
uname -v = #48-Ubuntu SMP Tue Apr 23 23:03:38 UTC 2013

/usr/bin/uname -p = unknown
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
hostinfo               = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /usr/local/sbin
PATH: /usr/local/bin
PATH: /usr/sbin
PATH: /usr/bin
PATH: /sbin
PATH: /bin
PATH: /usr/games
PATH: /usr/local/games


## ----------- ##
## Core tests. ##
## ----------- ##

configure:1287: checking for make
configure:1303: found /usr/bin/make
configure:1313: result: make
configure:1330: checking whether make sets $(MAKE)
configure:1350: result: yes
configure:1397: checking for a BSD-compatible install
configure:1452: result: /usr/bin/install -c
configure:1465: checking for date in ChangeLog
configure:1474: result: 2013-03-29
configure:1476: checking for release in ChangeLog
configure:1482: result: not found, using 2013-03-29 instead
configure:1540: checking for emacs
configure:1558: found /usr/bin/emacs
configure:1570: result: /usr/bin/emacs
configure:1587: checking if /usr/bin/emacs is XEmacs
/usr/bin/emacs -batch -no-site-file -eval (let* ((x (if (featurep (quote xemacs)) "yes" "no"))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-11532"))
Wrote /home/commanders2005/.emacs.d/auctex/auctex-20130402-a/conftest-11532
=> no
configure:1609: result: no
configure:1613: checking for Emacs prefix
/usr/bin/emacs -batch -no-site-file -eval (let* ((cmd(pop command-line-args-left))(x (condition-case nil (let*
    ((prefix (directory-file-name (file-name-directory (executable-find cmd))))
     (parent (directory-file-name (file-name-directory prefix))))
    (if (string= (file-name-nondirectory prefix) "bin")
        (setq prefix parent)
      (if (string= (file-name-nondirectory parent) "bin")
         (setq prefix (directory-file-name (file-name-directory parent)))))
    prefix) (error NONE)))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-11532")) /usr/bin/emacs
Wrote /home/commanders2005/.emacs.d/auctex/auctex-20130402-a/conftest-11532
=> /usr
configure:1632: result: "/usr"
configure:1664: checking if Emacs is recent enough
/usr/bin/emacs -batch -no-site-file -eval (let* ((x (cond ((< emacs-major-version 21) "no")
			 ((> emacs-major-version 21) "yes")
			 ((< emacs-minor-version 01) "no")
			 (t "yes")))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-11532"))
Wrote /home/commanders2005/.emacs.d/auctex/auctex-20130402-a/conftest-11532
=> yes
configure:1678: result: yes
configure:1690: checking for MULE support
/usr/bin/emacs -batch -eval (let* ((x (condition-case nil (require 'mule ) 	(error (prog1 nil (message "mule not found")))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-11532"))
Loading 00debian-vars...
Loading /etc/emacs/site-start.d/20apel.el (source)...
Loading /etc/emacs/site-start.d/50asymptote.el (source)...
Loading /etc/emacs/site-start.d/50auto-complete-el.el (source)...
Loading /etc/emacs/site-start.d/50autoconf.el (source)...
Loading /etc/emacs/site-start.d/50bbdb.el (source)...
Loading /etc/emacs/site-start.d/50cmake-data.el (source)...
Loading /etc/emacs/site-start.d/50dictionaries-common.el (source)...
Loading debian-ispell...
Loading /var/cache/dictionaries-common/emacsen-ispell-default.el (source)...
Loading /var/cache/dictionaries-common/emacsen-ispell-dicts.el (source)...
Loading /etc/emacs/site-start.d/50emacs-goodies-el.el (source)...
Loading /etc/emacs/site-start.d/50ess.el (source)...
Loading /etc/emacs/site-start.d/50flim.el (source)...
Loading /etc/emacs/site-start.d/50lilypond-data.el (source)...
Loading /etc/emacs/site-start.d/50w3m-el.el (source)...
Loading /etc/emacs/site-start.d/51mu-cite.el (source)...
Loading /etc/emacs/site-start.d/51semi.el (source)...
Loading /etc/emacs/site-start.d/65wl-beta.el (source)...
Wrote /home/commanders2005/.emacs.d/auctex/auctex-20130402-a/conftest-11532
=> mule
configure:1724: result: yes
configure:1772: checking if build directory is valid
/usr/bin/emacs -batch -eval (let* ((x (if (or (member (directory-file-name default-directory) load-path)	      (member (file-name-as-directory default-directory) load-path))	 "no" "yes"))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-11532"))
Loading 00debian-vars...
Loading /etc/emacs/site-start.d/20apel.el (source)...
Loading /etc/emacs/site-start.d/50asymptote.el (source)...
Loading /etc/emacs/site-start.d/50auto-complete-el.el (source)...
Loading /etc/emacs/site-start.d/50autoconf.el (source)...
Loading /etc/emacs/site-start.d/50bbdb.el (source)...
Loading /etc/emacs/site-start.d/50cmake-data.el (source)...
Loading /etc/emacs/site-start.d/50dictionaries-common.el (source)...
Loading debian-ispell...
Loading /var/cache/dictionaries-common/emacsen-ispell-default.el (source)...
Loading /var/cache/dictionaries-common/emacsen-ispell-dicts.el (source)...
Loading /etc/emacs/site-start.d/50emacs-goodies-el.el (source)...
Loading /etc/emacs/site-start.d/50ess.el (source)...
Loading /etc/emacs/site-start.d/50flim.el (source)...
Loading /etc/emacs/site-start.d/50lilypond-data.el (source)...
Loading /etc/emacs/site-start.d/50w3m-el.el (source)...
Loading /etc/emacs/site-start.d/51mu-cite.el (source)...
Loading /etc/emacs/site-start.d/51semi.el (source)...
Loading /etc/emacs/site-start.d/65wl-beta.el (source)...
Wrote /home/commanders2005/.emacs.d/auctex/auctex-20130402-a/conftest-11532
=> yes
configure:1790: result: yes
configure:1879: checking where lisp files go
/usr/bin/emacs -batch -eval (let* ((prefix(pop command-line-args-left)) (expanded(pop command-line-args-left)) (x (catch 22
       (let (reldir (dirs load-path))
	  (dolist (name (list "emacs/site-lisp" "emacs/site-packages"
	         "site-lisp" "site-packages") "NONE")
	    (dolist (dir dirs)
	      (when (and dir
	      	         (setq dir (directory-file-name dir))
                         (file-name-absolute-p dir)
	      	         (file-directory-p dir)
	                 (not (string-match "\\`\\.\\."
                           (setq reldir (file-relative-name dir expanded))))
			 (not (file-name-absolute-p reldir))
                         (let ((name name) (dir dir))
		           (while (and dir name
		                       (string= (file-name-nondirectory dir)
		                                (file-name-nondirectory name))
                              (setq dir (file-name-directory dir)
				   name (file-name-directory name))
			      (if (and dir name)
			         (setq dir (directory-file-name dir)
			              name (directory-file-name name)))))
		            (null name))
		   (throw 22
                      (if (string= reldir ".") (directory-file-name prefix)
                        (concat (file-name-as-directory prefix)
                                reldir))))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-11532")) ${datadir}/emacs /usr/local/share/emacs
Loading 00debian-vars...
Loading /etc/emacs/site-start.d/20apel.el (source)...
Loading /etc/emacs/site-start.d/50asymptote.el (source)...
Loading /etc/emacs/site-start.d/50auto-complete-el.el (source)...
Loading /etc/emacs/site-start.d/50autoconf.el (source)...
Loading /etc/emacs/site-start.d/50bbdb.el (source)...
Loading /etc/emacs/site-start.d/50cmake-data.el (source)...
Loading /etc/emacs/site-start.d/50dictionaries-common.el (source)...
Loading debian-ispell...
Loading /var/cache/dictionaries-common/emacsen-ispell-default.el (source)...
Loading /var/cache/dictionaries-common/emacsen-ispell-dicts.el (source)...
Loading /etc/emacs/site-start.d/50emacs-goodies-el.el (source)...
Loading /etc/emacs/site-start.d/50ess.el (source)...
Loading /etc/emacs/site-start.d/50flim.el (source)...
Loading /etc/emacs/site-start.d/50lilypond-data.el (source)...
Loading /etc/emacs/site-start.d/50w3m-el.el (source)...
Loading /etc/emacs/site-start.d/51mu-cite.el (source)...
Loading /etc/emacs/site-start.d/51semi.el (source)...
Loading /etc/emacs/site-start.d/65wl-beta.el (source)...
Wrote /home/commanders2005/.emacs.d/auctex/auctex-20130402-a/conftest-11532
=> ${datadir}/emacs/site-lisp
configure:1954: result: ${datadir}/emacs/site-lisp
configure:1958: checking what file to use for auctex startup
configure:1985: result: ${datadir}/emacs/site-lisp/auctex.el
configure:2003: checking where the package lisp files go
/usr/bin/emacs -batch -no-site-file -eval (let* ((path(pop command-line-args-left)) (lispdir(pop command-line-args-left)) (startup(pop command-line-args-left)) (target(pop command-line-args-left))(x (progn (setq path (directory-file-name path))
  (if (or target
          (not (string= (car load-path) (directory-file-name (car load-path)))))
    (setq path (file-name-as-directory path)))
  (setq path (expand-file-name path lispdir))
  (setq startupdir (file-name-directory (expand-file-name startup lispdir)))
  (prin1-to-string
    (if (or (string-match "\\`\\.\\."
              (setq relname (file-relative-name startupdir lispdir)))
            (file-name-absolute-p relname)
	    (string-match "\\`\\.\\."
              (setq relname (file-relative-name path lispdir)))
 	    (file-name-absolute-p relname))
	  (concat path target)
	(cond (target
	       `(expand-file-name
                   ,(file-relative-name (concat path target) startupdir)
	           (file-name-directory load-file-name)))
              ((string= path startupdir)
	         '(file-name-directory load-file-name))
	      ((string= path (directory-file-name startupdir))
                 '(directory-file-name (file-name-directory load-file-name)))
              (t
	       `(expand-file-name
                   ,(file-relative-name path startupdir)
	           (file-name-directory load-file-name))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-11532")) /usr/local/share/emacs/site-lisp/auctex /usr/local/share/emacs/site-lisp /usr/local/share/emacs/site-lisp/tex-site.el
Wrote /home/commanders2005/.emacs.d/auctex/auctex-20130402-a/conftest-11532
=> (expand-file-name "auctex" (file-name-directory load-file-name))
configure:2084: result: ${datadir}/emacs/site-lisp/auctex
configure:2087: checking where the data files go
/usr/bin/emacs -batch -no-site-file -eval (let* ((path(pop command-line-args-left)) (lispdir(pop command-line-args-left)) (startup(pop command-line-args-left)) (target(pop command-line-args-left))(x (progn (setq path (directory-file-name path))
  (if (or target
          (not (string= (car load-path) (directory-file-name (car load-path)))))
    (setq path (file-name-as-directory path)))
  (setq path (expand-file-name path lispdir))
  (setq startupdir (file-name-directory (expand-file-name startup lispdir)))
  (prin1-to-string
    (if (or (string-match "\\`\\.\\."
              (setq relname (file-relative-name startupdir lispdir)))
            (file-name-absolute-p relname)
	    (string-match "\\`\\.\\."
              (setq relname (file-relative-name path lispdir)))
 	    (file-name-absolute-p relname))
	  (concat path target)
	(cond (target
	       `(expand-file-name
                   ,(file-relative-name (concat path target) startupdir)
	           (file-name-directory load-file-name)))
              ((string= path startupdir)
	         '(file-name-directory load-file-name))
	      ((string= path (directory-file-name startupdir))
                 '(directory-file-name (file-name-directory load-file-name)))
              (t
	       `(expand-file-name
                   ,(file-relative-name path startupdir)
	           (file-name-directory load-file-name))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-11532")) /usr/local/share/emacs/site-lisp/auctex /usr/local/share/emacs/site-lisp /usr/local/share/emacs/site-lisp/tex-site.el
Wrote /home/commanders2005/.emacs.d/auctex/auctex-20130402-a/conftest-11532
=> (expand-file-name "auctex" (file-name-directory load-file-name))
configure:2168: result: ${datadir}/emacs/site-lisp/auctex
/usr/bin/emacs -batch -no-site-file -eval (let* ((path(pop command-line-args-left)) (lispdir(pop command-line-args-left)) (startup(pop command-line-args-left)) (target(pop command-line-args-left))(x (progn (setq path (directory-file-name path))
  (if (or target
          (not (string= (car load-path) (directory-file-name (car load-path)))))
    (setq path (file-name-as-directory path)))
  (setq path (expand-file-name path lispdir))
  (setq startupdir (file-name-directory (expand-file-name startup lispdir)))
  (prin1-to-string
    (if (or (string-match "\\`\\.\\."
              (setq relname (file-relative-name startupdir lispdir)))
            (file-name-absolute-p relname)
	    (string-match "\\`\\.\\."
              (setq relname (file-relative-name path lispdir)))
 	    (file-name-absolute-p relname))
	  (concat path target)
	(cond (target
	       `(expand-file-name
                   ,(file-relative-name (concat path target) startupdir)
	           (file-name-directory load-file-name)))
              ((string= path startupdir)
	         '(file-name-directory load-file-name))
	      ((string= path (directory-file-name startupdir))
                 '(directory-file-name (file-name-directory load-file-name)))
              (t
	       `(expand-file-name
                   ,(file-relative-name path startupdir)
	           (file-name-directory load-file-name))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-11532"))  /usr/local/share/emacs/site-lisp /usr/local/share/emacs/site-lisp/auctex.el tex-site.el
Wrote /home/commanders2005/.emacs.d/auctex/auctex-20130402-a/conftest-11532
=> (expand-file-name "tex-site.el" (file-name-directory load-file-name))
configure:2245: checking where the info files go
configure:2247: result: ${prefix}/info
configure:2258: checking where automatically generated global style hooks go
configure:2268: result: ${localstatedir}/auctex
/usr/bin/emacs -batch -no-site-file -eval (let* ((path(pop command-line-args-left)) (lispdir(pop command-line-args-left)) (startup(pop command-line-args-left)) (target(pop command-line-args-left))(x (progn (setq path (directory-file-name path))
  (if (or target
          (not (string= (car load-path) (directory-file-name (car load-path)))))
    (setq path (file-name-as-directory path)))
  (setq path (expand-file-name path lispdir))
  (setq startupdir (file-name-directory (expand-file-name startup lispdir)))
  (prin1-to-string
    (if (or (string-match "\\`\\.\\."
              (setq relname (file-relative-name startupdir lispdir)))
            (file-name-absolute-p relname)
	    (string-match "\\`\\.\\."
              (setq relname (file-relative-name path lispdir)))
 	    (file-name-absolute-p relname))
	  (concat path target)
	(cond (target
	       `(expand-file-name
                   ,(file-relative-name (concat path target) startupdir)
	           (file-name-directory load-file-name)))
              ((string= path startupdir)
	         '(file-name-directory load-file-name))
	      ((string= path (directory-file-name startupdir))
                 '(directory-file-name (file-name-directory load-file-name)))
              (t
	       `(expand-file-name
                   ,(file-relative-name path startupdir)
	           (file-name-directory load-file-name))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-11532")) /usr/local/var/auctex /usr/local/share/emacs/site-lisp /usr/local/share/emacs/site-lisp/tex-site.el
Wrote /home/commanders2005/.emacs.d/auctex/auctex-20130402-a/conftest-11532
=> "/usr/local/var/auctex"
configure:2348: checking for tex
configure:2366: found /usr/bin/tex
configure:2379: result: /usr/bin/tex
configure:2388: checking for pdftex
configure:2406: found /usr/bin/pdftex
configure:2419: result: /usr/bin/pdftex
configure:2428: checking for dvips
configure:2446: found /usr/bin/dvips
configure:2459: result: /usr/bin/dvips
configure:2473: checking for perl
configure:2491: found /usr/bin/perl
configure:2504: result: /usr/bin/perl
configure:2517: checking for makeinfo
configure:2535: found /usr/bin/makeinfo
configure:2548: result: /usr/bin/makeinfo
configure:2557: checking for texi2html
configure:2588: result: :
configure:2597: checking for texi2dvi
configure:2615: found /usr/bin/texi2dvi
configure:2628: result: /usr/bin/texi2dvi
configure:2637: checking for texi2pdf
configure:2655: found /usr/bin/texi2pdf
configure:2668: result: /usr/bin/texi2pdf
configure:2682: checking for install-info
configure:2700: found /usr/sbin/install-info
configure:2713: result: /usr/sbin/install-info
configure:2962: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by auctex config.status 11.87, which was
generated by GNU Autoconf 2.59.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on commanders

config.status:667: creating Makefile
config.status:667: creating tex-site.el.out
config.status:667: creating doc/Makefile
config.status:667: creating auctex.el
configure:3825: configuring in preview
configure:3942: running /bin/bash './configure' --prefix=/usr/local  --cache-file=/dev/null --srcdir=.

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_env_INSTALL_INFO_set=
ac_cv_env_INSTALL_INFO_value=
ac_cv_env_MAKEINFO_set=
ac_cv_env_MAKEINFO_value=
ac_cv_env_PERL_set=
ac_cv_env_PERL_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_path_DVIPS=/usr/bin/dvips
ac_cv_path_EMACS=/usr/bin/emacs
ac_cv_path_INSTALL_INFO=/usr/sbin/install-info
ac_cv_path_MAKEINFO=/usr/bin/makeinfo
ac_cv_path_PDFTEX=/usr/bin/pdftex
ac_cv_path_PERL=/usr/bin/perl
ac_cv_path_TEX=/usr/bin/tex
ac_cv_path_TEXI2DVI=/usr/bin/texi2dvi
ac_cv_path_TEXI2HTML=:
ac_cv_path_TEXI2PDF=/usr/bin/texi2pdf
ac_cv_path_install='/usr/bin/install -c'
ac_cv_prog_MAKECMD=make
ac_cv_prog_make_make_set=yes

## ----------------- ##
## Output variables. ##
## ----------------- ##

AUCTEXDATE='2013-03-29'
AUCTEXVERSION='2013-03-29'
DEFS='-DPACKAGE_NAME=\"auctex\" -DPACKAGE_TARNAME=\"auctex\" -DPACKAGE_VERSION=\"11.87\" -DPACKAGE_STRING=\"auctex\ 11.87\" -DPACKAGE_BUGREPORT=\"bug-auctex@gnu.org\" '
DVIPS='/usr/bin/dvips'
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EMACS='/usr/bin/emacs'
EMACS_FLAVOR='emacs'
HAVE_mule='yes'
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_INFO='/usr/sbin/install-info'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
LIBOBJS=''
LIBS=''
LTLIBOBJS=''
MAKECMD='make'
MAKEINFO='/usr/bin/makeinfo'
MULEELC='tex-jp.elc'
MULESRC='tex-jp.el'
PACKAGE_BUGREPORT='bug-auctex@gnu.org'
PACKAGE_NAME='auctex'
PACKAGE_STRING='auctex 11.87'
PACKAGE_TARNAME='auctex'
PACKAGE_VERSION='11.87'
PATH_SEPARATOR=':'
PDFTEX='/usr/bin/pdftex'
PERL='/usr/bin/perl'
SET_MAKE=''
SHELL='/bin/bash'
TEX='/usr/bin/tex'
TEXI2DVI='/usr/bin/texi2dvi'
TEXI2HTML=':'
TEXI2PDF='/usr/bin/texi2pdf'
XEMACS='no'
auctexstartfile='${datadir}/emacs/site-lisp/auctex.el'
autodir='${localstatedir}/auctex'
bindir='${exec_prefix}/bin'
build_alias=''
datadir='${prefix}/share'
exec_prefix='${prefix}'
host_alias=''
includedir='${prefix}/include'
infodir='${prefix}/info'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
lispautodir='"/usr/local/var/auctex"'
lispdir='${datadir}/emacs/site-lisp'
lisppackagedatadir='(expand-file-name "auctex" (file-name-directory load-file-name))'
lisppackagelispdir='(expand-file-name "auctex" (file-name-directory load-file-name))'
lisptexsite='(expand-file-name "tex-site.el" (file-name-directory load-file-name))'
localstatedir='${prefix}/var'
mandir='${prefix}/man'
oldincludedir='/usr/include'
packagedatadir='${datadir}/emacs/site-lisp/auctex'
packagedir='no'
packagelispdir='${datadir}/emacs/site-lisp/auctex'
prefix='/usr/local'
preview_enabled='yes'
program_transform_name='s,x,x,'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
subdirs=' preview'
sysconfdir='${prefix}/etc'
target_alias=''
texsite=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

#define PACKAGE_BUGREPORT "bug-auctex@gnu.org"
#define PACKAGE_NAME "auctex"
#define PACKAGE_STRING "auctex 11.87"
#define PACKAGE_TARNAME "auctex"
#define PACKAGE_VERSION "11.87"

configure: exit 0
